

/**=========================更新登录密码====================================**/
	 $(document).ready(function(){
		//提示密碼填寫規則
	 	 $("#newPasswordsShow").focus(function(){
		 		 $("#pwdrule").css("display","inherit");
	 	 });
		
		$("#newPasswordsShow").blur(function(){
			$("#pwdrule").css("display","none");
		});
		
	    $("#passwordsForm").validate({
			 errorClass:"errorwrong",
			 rules:{
				 passwordsShow:{
					 required:true
				 },
				 newPasswordsShow:{
					 required:true,
					 checkNewPwdRule: true,
					 minlength: 6,
					 maxlength:16,
					 checkNewPwd: true,
					 checkIsUserName: true
				 },
				 twoPasswordsShow:{
					 required:true,
					 checkTwoPwd: true
				 }
			 },
			 messages:{
				 passwordsShow:{
					 required:"<u></u><i></i>请 输 入原始密码"
				 },
				 newPasswordsShow:{
					 required:"<u></u><i></i>6-16位字符，支持字母、数字及'_'组合",
					 minlength: "<u></u><i></i>6-16位字符，支持字母、数字及'_'组合",
					 maxlength:"<u></u><i></i>6-16位字符，支持字母、数字及'_'组合"
				 },
				 twoPasswordsShow:{
					 required:"<u></u><i></i>请填写确认密码",
				 }
			 }
		 });
		jQuery.validator.addMethod("checkNewPwd", function() {   
			var check1 = !($("#passwordsShow").val() == $("#newPasswordsShow").val());
			return check1}, "<u></u><i></i>原始密码与新密码相同，请重新输入");
		jQuery.validator.addMethod("checkTwoPwd", function() {   
			var check2 = ($("#twoPasswordsShow").val() == $("#newPasswordsShow").val());
			return check2}, "<u></u><i></i>两次密码输入不一致");
		jQuery.validator.addMethod("checkNewPwdRule", function(){
			 var pwd = $("#newPasswordsShow").val();
			 var ragex=/^[0-9]*$/;
			 var ragexa=/^[A-Za-z]*$/;
			 var ragexb =/^[^ ]*$/;
			 var rag = /^[a-zA-Z0-9_]*$/;
			 var result = (rag.test(pwd)) ;
			 return result}, "<u></u><i></i>密码格式不正确");
		jQuery.validator.addMethod("checkIsUserName", function() {   
			var check3 = !($("#newPasswordsShow").val() == $("#userCode").val());
			return check3}, "<u></u><i></i>输入密码不能与用户名相同");
	 });

	function savePasswords(){
		if($("#passwordsForm").valid()){
			$.dm.block($(".content-right"));
			var password=$("#passwordsShow").val();
			$("#passwords").val($.md5(password));
			
			var newPasswords=$("#newPasswordsShow").val();
			$("#newPasswords").val($.md5(newPasswords));
			
			var twoPasswords=$("#twoPasswordsShow").val();
			$("#twoPasswords").val($.md5(twoPasswords));
			
			$("#passwordsForm").submit();
		}
	}
	
	//验证密码输入是否正确
	function validCurrentPwd(){
		//debugger;
		callService("/member/validCurrentPwd.ajax",
		{"id":$("#input_idForupdatePasswords").val(), "passwords":$.md5($("#passwordsShow").val())},
		{callSuccess:function(status){
			if(status == "-1"){
				$("#currPwdWrong").css("display", "inherit");
			}else{
				$("#currPwdWrong").css("display", "none");
			}
		}});
	}
	
	//验证密码强度
	function pwdStrongCheck(pwd){
		var Modes=0;
		for (i=0;i<pwd.length;i++){ 
			//测试每一个字符的类别并统计一共有多少种模式. 
			Modes|=CharMode(pwd.charCodeAt(i)); 
		} 
		var S_level = bitTotal(Modes);
		$("#pwStrength").val(S_level);
		switch(S_level) { 
			case 0: 
				$("#pwdStren1").css("display","none");
				$("#pwdStren2").css("display","none");
				$("#pwdStren3").css("display","none");
				$("#pwdStren4").css("display","none");
				break; 
			case 1: 
				$("#pwdStren1").css("display","inherit");
				$("#pwdStren2").css("display","inherit");
				$("#pwdStren3").css("display","none");
				$("#pwdStren4").css("display","none");
				break; 
			case 2: 
				$("#pwdStren1").css("display","none");
				$("#pwdStren2").css("display","none");
				$("#pwdStren3").css("display","inherit");
				$("#pwdStren4").css("display","none");
				break; 
			case 3: 
				$("#pwdStren1").css("display","none");
				$("#pwdStren2").css("display","none");
				$("#pwdStren3").css("display","none");
				$("#pwdStren4").css("display","inherit");
				break;
			} 
	}
	
	//测试某个字符是属于哪一类. 
	function CharMode(iN){ 
		if (iN>=48 && iN <=57) //数字 
			return 1; 
		if (iN>=65 && iN <=90) //大写字母 
			return 2; 
		if (iN>=97 && iN <=122) //小写 
			return 4; 
		else 
			return 8; //特殊字符 
	}
	
	//计算出当前密码当中一共有多少种模式 
	function bitTotal(num){ 
		var modes=0; 
		for (i=0;i<4;i++){ 
			if (num & 1) modes++; 
			num>>>=1; 
		} 
		return modes; 
	}
	
	/**=========================设置密保====================================**/
	//提交密保设置step2
	function saveProStep(){
		if(checkprotect()){
			$.dm.block($(".content-right"));
			$("#updatePwdProtectForm").submit();
		}
	}
	//密保设置表单验证
	$(document).ready(function(){
		$('[name="ppAnswer0"]').bind('blur',function(){
			protect1();
			minlength0Check();
		})
		$('[name="ppAnswer1"]').bind('blur',function(){
			protect2();
			minlength1Check();
		})
		$('[name="ppAnswer2"]').bind('blur',function(){
			protect3();
			minlength2Check();
		})		
	})
	function protect1(){//答案1
		if($('[name="ppAnswer0"]').val()==''){
			$('#ppAnswer0Tip').show();return false;
		}else{
			$('#ppAnswer0Tip').hide();return true;
		}
	}
	function protect2(){//答案2
		if($('[name="ppAnswer1"]').val()==''){
			$('#ppAnswer1Tip').show();return false;
		}else{
			$('#ppAnswer1Tip').hide();return true;
		}
	}
	function protect3(){//答案3
		if($('[name="ppAnswer2"]').val()==''){
			$('#ppAnswer2Tip').show();return false;
		}else{
			$('#ppAnswer2Tip').hide();return true;
		}
	}
	function minlength0Check(){
		if($('[name="ppAnswer0"]').val()!=''){
			if($('[name="ppAnswer0"]').val().length<1){
			$('#minlength0Check').show();return false;
			}else{
				$('#minlength0Check').hide();return true;	
			}
		
		}
	}
	function minlength1Check(){
		if($('[name="ppAnswer1"]').val()!=''){
			if($('[name="ppAnswer1"]').val().length<1){
			$('#minlength1Check').show();return false;
			}else{
				$('#minlength1Check').hide();return true;	
			}
		
		}
	}
	function minlength2Check(){
		if($('[name="ppAnswer2"]').val()!=''){
			if($('[name="ppAnswer2"]').val().length<1){
			$('#minlength2Check').show();return false;
			}else{
				$('#minlength2Check').hide();return true;	
			}
		
		}
	}
	function checkprotect(){
		var question1=$('#question1').val();
		var question2=$('#question2').val();
		var question3=$('#question3').val();
		if(protect1()==false ||protect2()==false || protect3()==false ){
			return false;
		}else if(question1==question2 || question1==question3 ||question2==question3){
			jsErrAlert('问题不能相同');
			return false;
		}else if(minlength0Check()==false||minlength1Check()==false||minlength2Check()==false){
			return false;
		}
		else{
			return true;
		}

	}
	
	/**=========================邮箱绑定====================================**/
	//邮箱格式验证
	$(document).ready(function(){
		
		if(emailAddress != ""){
			$("#isMailth").css("display","inherit");
		}		
		if(sendMail != "" && sendMail == "failed"){
			$("#isSendMail").css("display","inherit");
		}
		
		$("#isMailForm").validate({
			 errorClass:"errorwrong",
			 rules:{
				 mailAddress:{
					 required:true,
					 email:true
				 }
			 },
			 messages:{
				 mailAddress:{
					 required:"<u></u><i></i>请填写邮箱地址",
					 email:"<u></u><i></i>请输入正确的邮箱地址"
				 }
			 }
		})
	});

	//绑定邮箱
	function saveIsMail(){
		if($("#isMailForm").valid()){
			$("#isMailForm").submit();
		}
	}